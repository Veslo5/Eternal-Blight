{
	// Place your Eternal-Blight workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"module" : {
		"scope": "lua",
		"prefix": "module",
		"body": [
			"local ${1:Name} = {}",
			"",
			"return ${1:Name}"
		],
		"description": "New lua module"
	},
	"scene": {
		"scope": "lua",
		"prefix": "scene",
		"body":[
			"local ${1:Name} = {}",
			"",
			"function ${1:Name}.load()\n\nend\n",
			"function ${1:Name}.update(dt) \n\nend\n",
			"function ${1:Name}.draw()\n\nend\n",
			"function ${1:Name}.keypressed(key, scancode, isrepeat)\n\nend\n",
			"function ${1:Name}.keyreleased(key, scancode)\n\nend\n",
			"function ${1:Name}.mousepressed(x, y, button, istouch, presses)\n\nend\n",
			"function ${1:Name}.mousereleased(x, y, button, istouch, presses)\n\nend\n",
			"function ${1:Name}.resize(width, height)\n\nend\n",
			"function ${1:Name}.textinput(text)\n\nend\n",
			"function ${1:Name}.unload()\n\nend",
			"",
			"return ${1:Name}"
		],
		"description": "New scene"
	},
	"new" : {
		"scope": "lua",
		"prefix": "new",
		"body": [
			"function ${1:Name}:new()",
			"\tlocal newInstance = {}",
			"\tsetmetatable(newInstance, self)",
			"\tself.__index = self \n",
			"\treturn newInstance",
			"end"
		],
		"description": "New instance"
	}
}